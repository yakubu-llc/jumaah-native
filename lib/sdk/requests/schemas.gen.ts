// This file is auto-generated by @hey-api/openapi-ts

export const $Account = {
    additionalProperties: false,
    properties: {
        createdAt: {
            format: 'date-time',
            type: 'string'
        },
        deletedAt: {
            format: 'date-time',
            type: ['string', 'null']
        },
        id: {
            format: 'int64',
            type: 'integer'
        },
        name: {
            type: 'string'
        },
        updatedAt: {
            format: 'date-time',
            type: ['string', 'null']
        }
    },
    required: ['id', 'name', 'createdAt', 'updatedAt', 'deletedAt'],
    type: 'object'
} as const;

export const $Attendee = {
    additionalProperties: false,
    properties: {
        accountId: {
            format: 'int64',
            type: 'integer'
        },
        createdAt: {
            format: 'date-time',
            type: 'string'
        },
        delayedETA: {
            format: 'date-time',
            type: ['string', 'null']
        },
        deletedAt: {
            format: 'date-time',
            type: ['string', 'null']
        },
        jumaahId: {
            format: 'int64',
            type: 'integer'
        },
        updatedAt: {
            format: 'date-time',
            type: ['string', 'null']
        }
    },
    required: ['accountId', 'jumaahId', 'delayedETA', 'createdAt', 'updatedAt', 'deletedAt'],
    type: 'object'
} as const;

export const $CreateAccountParams = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/CreateAccountParams.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        name: {
            type: 'string'
        }
    },
    required: ['name'],
    type: 'object'
} as const;

export const $CreateAttendeeParams = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/CreateAttendeeParams.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        accountId: {
            format: 'int64',
            minimum: 1,
            type: 'integer'
        },
        delayedETA: {
            format: 'date-time',
            type: ['string', 'null']
        },
        jumaahId: {
            format: 'int64',
            minimum: 1,
            type: 'integer'
        }
    },
    required: ['accountId', 'jumaahId', 'delayedETA'],
    type: 'object'
} as const;

export const $CreateAttendeeResponseBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/CreateAttendeeResponseBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        attendee: {
            '$ref': '#/components/schemas/Attendee'
        },
        message: {
            type: 'string'
        }
    },
    required: ['attendee', 'message'],
    type: 'object'
} as const;

export const $CreateJumaahParams = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/CreateJumaahParams.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        accountId: {
            format: 'int64',
            minimum: 1,
            type: 'integer'
        },
        beginsAt: {
            format: 'date-time',
            type: 'string'
        },
        musalahId: {
            format: 'int64',
            minimum: 1,
            type: 'integer'
        },
        name: {
            type: 'string'
        },
        status: {
            enum: ['suggested', 'scheduled'],
            type: 'string'
        }
    },
    required: ['name', 'accountId', 'musalahId', 'beginsAt', 'status'],
    type: 'object'
} as const;

export const $CreateMusalahParams = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/CreateMusalahParams.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        name: {
            type: 'string'
        }
    },
    required: ['name'],
    type: 'object'
} as const;

export const $ErrorDetail = {
    additionalProperties: false,
    properties: {
        location: {
            description: "Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'",
            type: 'string'
        },
        message: {
            description: 'Error message text',
            type: 'string'
        },
        value: {
            description: 'The value at the given location'
        }
    },
    type: 'object'
} as const;

export const $ErrorModel = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/ErrorModel.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        detail: {
            description: 'A human-readable explanation specific to this occurrence of the problem.',
            examples: ['Property foo is required but is missing.'],
            type: 'string'
        },
        errors: {
            description: 'Optional list of individual error details',
            items: {
                '$ref': '#/components/schemas/ErrorDetail'
            },
            type: ['array', 'null']
        },
        instance: {
            description: 'A URI reference that identifies the specific occurrence of the problem.',
            examples: ['https://example.com/error-log/abc123'],
            format: 'uri',
            type: 'string'
        },
        status: {
            description: 'HTTP status code',
            examples: [400],
            format: 'int64',
            type: 'integer'
        },
        title: {
            description: 'A short, human-readable summary of the problem type. This value should not change between occurrences of the error.',
            examples: ['Bad Request'],
            type: 'string'
        },
        type: {
            default: 'about:blank',
            description: 'A URI reference to human-readable documentation for the error.',
            examples: ['https://example.com/errors/example'],
            format: 'uri',
            type: 'string'
        }
    },
    type: 'object'
} as const;

export const $GetAllAccountOutputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/GetAllAccountOutputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        accounts: {
            items: {
                '$ref': '#/components/schemas/Account'
            },
            type: ['array', 'null']
        },
        cursor: {
            format: 'int64',
            type: ['integer', 'null']
        },
        hasMore: {
            type: 'boolean'
        },
        message: {
            type: 'string'
        }
    },
    required: ['accounts', 'message', 'cursor', 'hasMore'],
    type: 'object'
} as const;

export const $GetAllJumaahOutputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/GetAllJumaahOutputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        cursor: {
            format: 'int64',
            type: ['integer', 'null']
        },
        hasMore: {
            type: 'boolean'
        },
        jumaahs: {
            items: {
                '$ref': '#/components/schemas/Jumaah'
            },
            type: ['array', 'null']
        },
        message: {
            type: 'string'
        }
    },
    required: ['jumaahs', 'message', 'cursor', 'hasMore'],
    type: 'object'
} as const;

export const $GetAllMusalahOutputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/GetAllMusalahOutputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        cursor: {
            format: 'int64',
            type: ['integer', 'null']
        },
        hasMore: {
            type: 'boolean'
        },
        message: {
            type: 'string'
        },
        musalahs: {
            items: {
                '$ref': '#/components/schemas/Musalah'
            },
            type: ['array', 'null']
        }
    },
    required: ['musalahs', 'message', 'cursor', 'hasMore'],
    type: 'object'
} as const;

export const $GetAttendeeCountResponseBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/GetAttendeeCountResponseBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        attendee_count: {
            format: 'int64',
            type: 'integer'
        },
        message: {
            type: 'string'
        }
    },
    required: ['attendee_count', 'message'],
    type: 'object'
} as const;

export const $GetAttendeeResponseBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/GetAttendeeResponseBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        attendee: {
            '$ref': '#/components/schemas/Attendee'
        },
        message: {
            type: 'string'
        }
    },
    required: ['attendee', 'message'],
    type: 'object'
} as const;

export const $GetAttendeesResponseBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/GetAttendeesResponseBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        attendees: {
            items: {
                '$ref': '#/components/schemas/Attendee'
            },
            type: ['array', 'null']
        },
        cursor: {
            format: 'int64',
            type: ['integer', 'null']
        },
        hasMore: {
            type: 'boolean'
        },
        message: {
            type: 'string'
        }
    },
    required: ['attendees', 'message', 'cursor', 'hasMore'],
    type: 'object'
} as const;

export const $HealthCheckOutputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/HealthCheckOutputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        message: {
            type: 'string'
        }
    },
    required: ['message'],
    type: 'object'
} as const;

export const $Jumaah = {
    additionalProperties: false,
    properties: {
        accountId: {
            format: 'int64',
            type: 'integer'
        },
        beginsAt: {
            format: 'date-time',
            type: 'string'
        },
        createdAt: {
            format: 'date-time',
            type: 'string'
        },
        deletedAt: {
            format: 'date-time',
            type: ['string', 'null']
        },
        id: {
            format: 'int64',
            type: 'integer'
        },
        musalahId: {
            format: 'int64',
            type: 'integer'
        },
        name: {
            type: 'string'
        },
        status: {
            type: 'string'
        },
        updatedAt: {
            format: 'date-time',
            type: ['string', 'null']
        }
    },
    required: ['id', 'name', 'accountId', 'musalahId', 'status', 'beginsAt', 'createdAt', 'updatedAt', 'deletedAt'],
    type: 'object'
} as const;

export const $MessageResponse = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/MessageResponse.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        message: {
            type: 'string'
        }
    },
    required: ['message'],
    type: 'object'
} as const;

export const $Musalah = {
    additionalProperties: false,
    properties: {
        createdAt: {
            format: 'date-time',
            type: 'string'
        },
        deletedAt: {
            format: 'date-time',
            type: ['string', 'null']
        },
        id: {
            format: 'int64',
            type: 'integer'
        },
        name: {
            type: 'string'
        },
        updatedAt: {
            format: 'date-time',
            type: ['string', 'null']
        }
    },
    required: ['id', 'name', 'createdAt', 'updatedAt', 'deletedAt'],
    type: 'object'
} as const;

export const $SingleAccountResponseBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/SingleAccountResponseBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        account: {
            '$ref': '#/components/schemas/Account'
        },
        message: {
            type: 'string'
        }
    },
    required: ['account', 'message'],
    type: 'object'
} as const;

export const $SingleJumaahResponseBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/SingleJumaahResponseBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        jumaah: {
            '$ref': '#/components/schemas/Jumaah'
        },
        message: {
            type: 'string'
        }
    },
    required: ['jumaah', 'message'],
    type: 'object'
} as const;

export const $SingleMusalahResponseBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/SingleMusalahResponseBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        message: {
            type: 'string'
        },
        musalah: {
            '$ref': '#/components/schemas/Musalah'
        }
    },
    required: ['musalah', 'message'],
    type: 'object'
} as const;

export const $UpdateAccountParams = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/UpdateAccountParams.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        name: {
            type: 'string'
        }
    },
    required: ['name'],
    type: 'object'
} as const;

export const $UpdateAttendeeParams = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/UpdateAttendeeParams.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        accountId: {
            format: 'int64',
            minimum: 1,
            type: 'integer'
        },
        delayedETA: {
            format: 'date-time',
            type: ['string', 'null']
        },
        jumaahId: {
            format: 'int64',
            minimum: 1,
            type: 'integer'
        }
    },
    required: ['accountId', 'jumaahId', 'delayedETA'],
    type: 'object'
} as const;

export const $UpdateAttendeeResponseBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/UpdateAttendeeResponseBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        attendee: {
            '$ref': '#/components/schemas/Attendee'
        },
        message: {
            type: 'string'
        }
    },
    required: ['attendee', 'message'],
    type: 'object'
} as const;

export const $UpdateJumaahParams = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/UpdateJumaahParams.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        begins_at: {
            format: 'date-time',
            type: 'string'
        },
        musalah_id: {
            format: 'int64',
            minimum: 1,
            type: 'integer'
        },
        name: {
            type: 'string'
        },
        status: {
            enum: ['suggested', 'scheduled'],
            type: 'string'
        }
    },
    required: ['name', 'musalah_id', 'begins_at', 'status'],
    type: 'object'
} as const;

export const $UpdateMusalahParams = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/UpdateMusalahParams.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        name: {
            type: 'string'
        }
    },
    required: ['name'],
    type: 'object'
} as const;